resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: tahsin/git-pull-resource
    tag: latest

resources:
- name: elasticsearch
  type: git
  source:
    uri: https://github.com/kubedb/elasticsearch
    branch: master

- name: pull-request
  type: pull-request
  source:
    owner: kubedb
    repo: elasticsearch
    label: ok-to-test
    access_token: ((access_token))

- name: creds
  type: s3
  source:
    bucket: kubedbci
    access_key_id: ((s3-access-key))
    secret_access_key: ((s3-secret))
    versioned_file: creds.zip

jobs:
- name: test-elasticsearch
  plan:
  - get: elasticsearch
    trigger: true
  - get: creds
    params:
      unpack: true
  - task: test-e2e
    privileged: true
    file: elasticsearch/hack/concourse/task.yml
    params:
      TOKEN: ((digitaloceanToken))
      DOCKER_USER: ((docker_user))
      DOCKER_PASS: ((docker_pass))

- name: test-elasticsearch-pr
  plan:
  - get: pull-request
    trigger: true
  - put: pull-request
    params: { path: pull-request, status: pending}
  - get: creds
    params:
      unpack: true
  - task: test-e2e
    privileged: true
    file: pull-request/hack/concourse/task.yml
    input_mapping:
      elasticsearch: pull-request
    params:
      TOKEN: ((digitaloceanToken))
      DOCKER_USER: ((docker_user))
      DOCKER_PASS: ((docker_pass))
    on_success:
      put: pull-request
      params: { path: pull-request, status: success}
    on_failure:
      put: pull-request
      params: {path: pull-request, status: failure}
